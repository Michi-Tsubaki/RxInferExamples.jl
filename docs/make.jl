using Documenter, Weave

const AUTOGEN_DIR = joinpath(@__DIR__, "src", "autogenerated")

struct Category
    title::String
    description::String
end

# Define category order (categories not in this list will be sorted alphabetically at the end)
const ORDERED_CATEGORIES = [
    Category("Basic Examples", """
        Fundamental concepts and introductory tutorials. Start here if you're new to RxInfer.jl.
        These examples cover basic probabilistic models, inference techniques, and data processing.
        """),
    Category("Advanced Examples", """
        More complex applications and advanced inference techniques. These examples demonstrate
        sophisticated models, performance optimization, and integration with other Julia packages.
        """),
    Category("Problem Specific", """
        Real-world applications and domain-specific models. These examples show how RxInfer.jl
        can be applied to specific problems like time series analysis and signal processing.
        """)
]

const ALL_EXAMPLES_CONTRIBUTING_NOTE = """
!!! note "Contributing"
    This gallery is community-driven and automatically generated from our repository.
    We welcome your contributions!
    
    - [Report a bug](https://github.com/ReactiveBayes/RxInferExamples.jl/issues/new)
    - [Submit a pull request](https://github.com/ReactiveBayes/RxInferExamples.jl/pulls)
    - [Read contribution guide](../how_to_contribute.md)
    - [RxInfer.jl respository](https://github.com/ReactiveBayes/RxInfer.jl)
"""

# Helper function to sort categories according to OREDERED_CATEGORIES
function sort_by_ORDERED_CATEGORIES(items)
    # Create a lookup for category order
    order_lookup = Dict(category.title => i for (i, category) in enumerate(ORDERED_CATEGORIES))
    
    # Sort function that uses the lookup
    sort(items, by = item -> begin
        category = item[1]  # Get category name from pair
        # Use high number for categories not in the order list
        get(order_lookup, category, length(ORDERED_CATEGORIES) + 1)
    end)
end

# Function to collect metadata from all examples
function collect_examples_metadata()
    examples_dir = joinpath(@__DIR__, "src", "examples")
    !isdir(examples_dir) && return []

    metadata = []
    
    # Walk through all directories
    for (root, _, files) in walkdir(examples_dir)
        # Check if there's a meta.jl file
        meta_path = joinpath(root, "meta.jl")
        md_files = filter(f -> endswith(f, ".md") && f != "index.md", files)
        
        for md_file in md_files
            example_path = relpath(joinpath(root, md_file), joinpath(@__DIR__, "src"))
            meta = if isfile(meta_path)
                include(meta_path)
            else
                continue
            end
            
            push!(metadata, (
                path = example_path,
                title = meta.title,
                description = meta.description,
                tags = meta.tags
            ))
        end
    end
    
    return metadata
end

# HTML generation helpers
function style_tag(tag)
    """
    <span style="display: inline-block; padding: 3px 7px; margin: 2px; 
        background: #f3f6f9; border-radius: 3px; font-size: 0.9em; 
        color: #476582;">
        $(tag)
    </span>
    """
end

function style_category_header(category)
    """
    ```@raw html
    <h2 style="margin-top: 2em; margin-bottom: 1em; color: #2c3e50;">
        $(titlecase(replace(category, "_" => " ")))
    </h2>
    ```
    """
end

function style_example_card(meta)
    tags_html = join(map(style_tag, meta.tags), " ")
    
    """
    ```@raw html
    <div style="margin: 1.5em 0; padding: 1em 1.2em; border-radius: 8px; border: 1px solid #e9ecef;">
        <h3 style="margin: 0 0 0.6em 0;">
    ```
    [$(meta.title)]($(joinpath("..", meta.path)))
    ```@raw html
        </h3>
        <p style="margin: 0 0 1em 0; line-height: 1.6;">
            $(meta.description)
        </p>
        $(tags_html)
    </div>
    ```
    """
end

# Function to generate the list of examples page
function generate_examples_list()
    # Ensure autogenerated directory exists
    mkpath(AUTOGEN_DIR)

    metadata = collect_examples_metadata()
    
    # Group examples by their folder path
    categories = Dict()
    for meta in metadata
        folder = splitpath(meta.path)[2]
        push!(get!(categories, folder, []), meta)
    end
    
    # Generate markdown content
    output_path = joinpath(AUTOGEN_DIR, "list_of_examples.md")
    open(output_path, "w") do io
        write(io, """
        # List of Examples

        Welcome to our curated collection of RxInfer.jl examples! Here you'll find a comprehensive set of tutorials, demonstrations, and real-world applications that showcase the power and flexibility of RxInfer.jl.

        Each example comes with:
        - A detailed description of concepts covered
        - Relevant tags for easy filtering
        - Complete source code and explanations
        - Visualizations and results analysis

        $ALL_EXAMPLES_CONTRIBUTING_NOTE
        """)
        
        # Process categories in specified order
        all_categories = collect(keys(categories))
        
        # First, write ordered categories
        for cat in ORDERED_CATEGORIES
            if cat.title in all_categories
                write(io, style_category_header(cat.title))
                
                # Add category description
                write(io, """
                ```@raw html
                <div style="margin: -0.5em 0 2em 0; color: #476582;">
                    $(cat.description)
                </div>
                ```
                """)
                
                for meta in categories[cat.title]
                    write(io, style_example_card(meta))
                end
                delete!(categories, cat.title)
            end
        end
        
        # Then write any remaining categories alphabetically
        for folder in sort(collect(keys(categories)))
            write(io, style_category_header(folder))
            
            # Add a generic description for unknown categories
            write(io, """
            ```@raw html
            <div style="margin: -0.5em 0 2em 0; color: #476582;">
                Additional examples demonstrating various aspects of RxInfer.jl.
            </div>
            ```
            """)
            
            for meta in categories[folder]
                write(io, style_example_card(meta))
            end
        end

        write(io, ALL_EXAMPLES_CONTRIBUTING_NOTE)
    end
end

# Generate the examples list before building docs
generate_examples_list()

# Function to generate pages structure from examples directory
function generate_pages()
    examples_dir = joinpath(@__DIR__, "src", "examples")
    !isdir(examples_dir) && return ["Main page" => "index.md"]

    # Base pages with main index and list of examples
    pages = Any[
        "Home" => "index.md",
        "How to contribute" => "how_to_contribute.md",
        "List of Examples" => "autogenerated/list_of_examples.md",
    ]

    # Helper function to create nested page structure
    function process_directory(dir, prefix="")
        items = []
        
        # Process all markdown files in the current directory
        for entry in readdir(dir)
            path = joinpath(dir, entry)
            
            if isfile(path) && endswith(entry, ".md") && entry != "index.md"
                # Get relative path from src directory
                rel_path = relpath(path, joinpath(@__DIR__, "src"))
                # Remove .md extension for the page title
                title = replace(basename(entry), r"\.md$" => "")
                push!(items, title => rel_path)
            elseif isdir(path) && !startswith(entry, "_")
                # Process subdirectory (skip directories starting with _)
                subdir_items = process_directory(path, joinpath(prefix, entry))
                if !isempty(subdir_items)
                    push!(items, entry => subdir_items)
                end
            end
        end
        
        return sort(items)  # Sort items within each category
    end

    # Add all example pages
    example_pages = process_directory(examples_dir)
    # Sort categories according to ORDERED_CATEGORIES
    example_pages = sort_by_ORDERED_CATEGORIES(example_pages)
    append!(pages, example_pages)

    push!(pages, "How we build the examples" => "how_build_works.md")

    return pages
end

makedocs(
    clean=true,
    sitename="RxInfer.jl Examples",
    pages=generate_pages(),
    format=Documenter.HTML(
        prettyurls=get(ENV, "CI", nothing) == "true",
        example_size_threshold=200 * 1024,
        size_threshold_warn=200 * 1024,
        inventory_version="1.0.0"
    )
)

if get(ENV, "CI", nothing) == "true"
    deploydocs(
        repo="github.com/ReactiveBayes/RxInferExamples.jl.git",
        devbranch="main",
        forcepush=true
    )
end