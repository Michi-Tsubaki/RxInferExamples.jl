using Documenter, Weave

const AUTOGEN_DIR = joinpath(@__DIR__, "src", "autogenerated")

# Function to collect metadata from all examples
function collect_examples_metadata()
    examples_dir = joinpath(@__DIR__, "src", "examples")
    !isdir(examples_dir) && return []

    metadata = []
    
    # Walk through all directories
    for (root, _, files) in walkdir(examples_dir)
        # Check if there's a meta.jl file
        meta_path = joinpath(root, "meta.jl")
        md_files = filter(f -> endswith(f, ".md") && f != "index.md", files)
        
        for md_file in md_files
            example_path = relpath(joinpath(root, md_file), joinpath(@__DIR__, "src"))
            meta = if isfile(meta_path)
                include(meta_path)
            else
                continue
            end
            
            push!(metadata, (
                path = example_path,
                title = meta.title,
                description = meta.description,
                tags = meta.tags
            ))
        end
    end
    
    return metadata
end

# HTML generation helpers
function style_tag(tag)
    """<span style="display: inline-block; padding: 3px 7px; margin: 2px; 
        background: #f3f6f9; border-radius: 3px; font-size: 0.9em; 
        color: #476582;">$(tag)</span>"""
end

function style_category_header(category)
    """
    ```@raw html
    <h2 style="margin-top: 2em; margin-bottom: 1em; color: #2c3e50;">
        $(titlecase(replace(category, "_" => " ")))
    </h2>
    ```
    """
end

function style_example_card(meta)
    tags_html = join(map(style_tag, meta.tags), " ")
    
    """
    ```@raw html
    <div style="margin: 1.5em 0; padding: 1em 1.2em; border-radius: 8px; border: 1px solid #e9ecef;">
        <h3 style="margin: 0 0 0.6em 0;">
    ```
    [$(meta.title)]($(joinpath("..", meta.path)))
    ```@raw html
        </h3>
        <p style="margin: 0 0 1em 0; line-height: 1.6;">
            $(meta.description)
        </p>
        $(tags_html)
    </div>
    ```
    """
end

# Function to generate the list of examples page
function generate_examples_list()
    # Ensure autogenerated directory exists
    mkpath(AUTOGEN_DIR)

    metadata = collect_examples_metadata()
    
    # Group examples by their folder path
    categories = Dict()
    for meta in metadata
        folder = splitpath(meta.path)[2]
        push!(get!(categories, folder, []), meta)
    end
    
    # Generate markdown content
    open(joinpath(AUTOGEN_DIR, "list_of_examples.md"), "w") do io
        write(io, """
        # List of Examples

        This page contains a comprehensive list of all available examples in the RxInfer.jl Examples collection.
        Each example includes a brief description and relevant tags to help you find what you're looking for.

        !!! note "Autogenerated Content"
            This page is automatically generated from the examples in the repository.
            If you find any issues or would like to contribute:
            
            - [Report a bug](https://github.com/ReactiveBayes/RxInferExamples.jl/issues/new)
            - [Submit a pull request](https://github.com/ReactiveBayes/RxInferExamples.jl/pulls)
            - Check our [contribution guide](../how_to_contribute.md)

        """)
        
        # Write examples by folder category
        for folder in sort(collect(keys(categories)))
            write(io, style_category_header(folder))
            
            for meta in categories[folder]
                write(io, style_example_card(meta))
            end
        end
    end
end

# Generate the examples list before building docs
generate_examples_list()

# Function to generate pages structure from examples directory
function generate_pages()
    examples_dir = joinpath(@__DIR__, "src", "examples")
    !isdir(examples_dir) && return ["Main page" => "index.md"]

    # Base pages with main index and list of examples
    pages = Any[
        "Home" => "index.md",
        "How to contribute" => "how_to_contribute.md",
        "List of Examples" => "autogenerated/list_of_examples.md",
    ]

    # Helper function to create nested page structure
    function process_directory(dir, prefix="")
        items = []
        
        # Process all markdown files in the current directory
        for entry in readdir(dir)
            path = joinpath(dir, entry)
            
            if isfile(path) && endswith(entry, ".md") && entry != "index.md"
                # Get relative path from src directory
                rel_path = relpath(path, joinpath(@__DIR__, "src"))
                # Remove .md extension for the page title
                title = replace(basename(entry), r"\.md$" => "")
                push!(items, title => rel_path)
            elseif isdir(path) && !startswith(entry, "_")
                # Process subdirectory (skip directories starting with _)
                subdir_items = process_directory(path, joinpath(prefix, entry))
                if !isempty(subdir_items)
                    push!(items, entry => subdir_items)
                end
            end
        end
        
        return items
    end

    # Add all example pages
    append!(pages, process_directory(examples_dir))

    push!(pages, "How we build the examples" => "how_build_works.md")

    return pages
end

makedocs(
    clean=true,
    sitename="RxInfer.jl Examples",
    pages=generate_pages(),
    format=Documenter.HTML(
        prettyurls=get(ENV, "CI", nothing) == "true",
        example_size_threshold=200 * 1024,
        size_threshold_warn=200 * 1024,
        inventory_version="1.0.0"
    )
)

if get(ENV, "CI", nothing) == "true"
    deploydocs(
        repo="github.com/ReactiveBayes/RxInferExamples.jl.git",
        devbranch="main",
        forcepush=true
    )
end